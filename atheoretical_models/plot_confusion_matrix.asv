clear; close all; clc;

%% model info

specifications = {'Exponential likelihood, shift criterion', 'Exponential likelihood, shift bias', 'Gaussian likelihood, shift criterion',  'Gaussian likelihood, shift bias',};
folders = {'exp_shiftC', 'exp_shiftMu', 'gauss_shiftC', 'gauss_shiftMu'};
numbers = (1:numel(specifications))';
model_info = table(numbers, specifications', folders', 'VariableNames', {'Number', 'Specification', 'FolderName'});

%% manage paths

restoredefaultpath;
currentDir= pwd;
[projectDir, ~]= fileparts(currentDir);
addpath(genpath(fullfile(projectDir, 'data')));
addpath(genpath(fullfile(projectDir, 'utils')));
outDir = fullfile(currentDir, mfilename);
if ~exist("outDir", 'dir'); mkdir(outDir); end

%% load

n_model = numel(folders);
n_sub = 10;

for i_model = 1:n_model

    curr_folder = fullfile(pwd, folders{i_model});
    
    files = dir(fullfile(curr_folder, 'sub-*'));

    for i_sub = 1:n_sub

        DATA(i_sub) = load(fullfile(curr_folder, files(i_sub).name));
        NLL(i_model, i_sub) = DATA(i_sub).model.nll;
        AIC(i_model, i_sub) = 2*DATA(i_sub).model.nll + 2*DATA(i_sub).model.initVal.num_para;
        BIC(i_model, i_sub) = 2*DATA(i_sub).model.nll ...
            + DATA(i_sub).model.initVal.num_para ...
            * log(numel(DATA(1).data(1).pre_s_unique) * DATA(1).data(1).pre_numTrials * 2 * numel(DATA(1).data));
            % SOA conditions x trials per condition x pre/post-te

       

    end

end


% % subtract min across models
% AIC = AIC(:, sub_slc);
% deltaAIC = AIC - min(AIC, [], 1);
% % deltaAIC = AIC - AIC(2,:);
% 
% figure
% 
% h = heatmap(round(deltaAIC, 2), 'XLabel','Observer', ...
%     'Colormap', flipud(bone),...
%     'ColorLimits', [0, 15], 'ColorbarVisible', 'on', 'GridVisible', 'off',...
%     'FontSize', 8); 
% colorbar;
% 
% h.YDisplayLabels = {'Criterion-shift', 'Bias-shift'};
% h.XDisplayLabels = num2cell(1:numel(sub_slc));
% 
% % save figure
% set(gca, 'FontSize', 8)
% set(gcf, 'Position',[0 0 400 110])
% 
% flnm = 'mc_criterion_bias';
% saveas(gca, fullfile(out_dir, flnm),'pdf')

