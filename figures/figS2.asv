% fig S2: 
% A. individual partiicpant's data of recalibration.
% B. Confidence interval of individual asymmetry index

clear; clc; close all;

%% manage paths

restoredefaultpath;
currentDir= pwd;
[projectDir, ~]= fileparts(currentDir);
[tempDir, ~] = fileparts(projectDir);
dataDir = fullfile(tempDir,'temporalRecalibrationData');
addpath(genpath(fullfile(projectDir, 'data')));
addpath(genpath(fullfile(projectDir, 'utils')));
out_dir = fullfile(currentDir, mfilename);
if ~exist(out_dir, 'dir'); mkdir(out_dir); end

%% set up

sub_slc = [1:4,6:10];

%% load bootstrapped results, extract pss_shift and calculate asymmetry index

result_folder = fullfile(dataDir, 'atheoretical_models_VBMC', 'exp_shiftMu');
atheo = load_subject_data(result_folder, sub_slc, 'sub-*');
atheo_btst = load_subject_data(result_folder, sub_slc, 'diag_btst_sub-*');

for ss = 1:numel(sub_slc)

        % Get asymmetry index of each bootstrap trials
        for jj = 1:numel(atheo_btst{ss}.pred)
            btst_ai(ss, jj)= sum(atheo_btst{ss}.pred{jj}.pss_shift);
        end
        [CI_lb(ss), CI_ub(ss)]  = get95CI(btst_ai(ss,:));

end

%% %%%%%%%%%%%%%%%%%%%%%%%% plot %%%%%%%%%%%%%%%%%%%%%%%%%%%%

lw = 0.5;
fontSZ = 7;
titleSZ = 9;
dotSZ = 10;

%% A. individual recalibration

tick_y = 0:0.5:1;
tick_x = [-500, 0, 500];
test_soa = atheo{1}.model.test_soa;
adaptor_soa = atheo{1}.model.sim_adaptor_soa;

figure;
set(gcf, 'Position', [0,0,2500,500]);

for ss = 1:numel(sub_slc)

    %% plot
    subplot(3,3,ss); hold on
    set(gca, 'FontSize', fontSZ, 'LineWidth', lw, 'TickDir', 'out')
    title(['S' num2str(ss)],'FontSize',titleSZ)

    %% plot atheoretical prediction

    l  = plot(adaptor_soa, toj_pss(ss,:),'ko', 'MarkerFaceColor','k');

    for jj = 1:9
        plot([adaptor_soa(jj),adaptor_soa(jj)],[-lb(ss, jj), -ub(ss, jj)],'k-','LineWidth',1)
    end

    %% plot model prediction

    plot(adaptor_soa, pred_recal(ss,:), '-o','LineWidth',lw, 'Color','r')

    % look better
    yl = 250;
    ylim([-yl, yl])
    yticks([-yl, 0, yl])
    yticklabels([-yl, 0, yl]./1e3)
    yline(0,'--','LineWidth',1.5)
    xticks(adaptor_soa)
    xticklabels(adaptor_soa/1e3)
    xtickangle(60)
    xlim([min(adaptor_soa)-100, max(adaptor_soa)+100])
    set(gca,'TickDir','out');

    if ss                              == numel(sub_slc)
        if save_fig
            flnm = 'indiv_recal';
            saveas(gca, fullfile(out_dir, flnm),'pdf')
        end
    end

    if ss == 4
        ylabel('Recalibration effect (s)','FontWeight','bold','FontSize',titleSZ)
    elseif ss == 8
        xlabel('Adapter SOA (s)','FontWeight','bold','FontSize',titleSZ)
    end

end

%% B. asymmetry index

lw = 0.5;
fontsz = 7;
titleFontSz = 10;

figure;
set(gcf, 'Position', [0,0,210,180]);
set(gca, 'LineWidth', lw, 'FontSize', fontsz,'TickDir', 'out');
hold on 

for ss = 1:numel(sub_slc)

    plot([ss,ss],  [CI_lb(ss), CI_ub(ss)],'k','LineWidth',2)
   
end

yline(0,'--')
xlim([0,10])
ylim([-700, 700])
yticks([-700, 0, 700])
yticklabels([-0.7, 0, 0.7])
xticks(1:9)
xticklabels(1:9)
xlabel('Participant')
ylabel('Asymmetry index')

flnm = 'asymmetry_index_ci';
saveas(gca, fullfile(out_dir, flnm),'pdf')
