% fig 2. Plot recalibration effect from atheoretical model prediction (exponential, shift bias)
% A. Example participant, example session
% B. Group recalibration effect

clear; clc; close all;

%% model info

specifications = {'Heuristic, asymmetric', 'Heuristic, symmetric', 'Causal inference, asymmetric',  'Causal inference, symmetric','Atheoretical'}; % Column 2: specifications
folders = {'heu_asym', 'heu_sym', 'cauInf_asym', 'cauInf_sym','exp_shiftMu'}; % Column 3: folder names
numbers = (1:numel(specifications))';
model_info = table(numbers, specifications', folders', 'VariableNames', {'Number', 'Specification', 'FolderName'});

%% manage paths

restoredefaultpath;
currentDir= pwd;
[projectDir, ~]= fileparts(currentDir);
addpath(genpath(fullfile(projectDir, 'data')));
addpath(genpath(fullfile(projectDir, 'utils')));
out_dir = fullfile(currentDir, mfilename);
if ~exist(out_dir, 'dir'); mkdir(out_dir); end

%% load 

sub_slc = [1:4,6:10];
exp_sub = 7;
exp_adp = 2;
result_folder = fullfile(projectDir, 'atheoretical_models_VBMC','exp_shiftMu');
files = dir(fullfile(result_folder, 'sub-*'));
btst_files = dir(fullfile(result_folder, 'btst_sub-*'));

% Preallocate memory for variables
num_sub_slc = numel(sub_slc);
log_model_evi = zeros(numel(folders), num_sub_slc);
bestP = cell(numel(folders), num_sub_slc);
pred = cell(numel(folders), num_sub_slc);
num_time_points = size(btst_fits, 2); % Assuming btst_fits is defined previously
pred_recal = zeros(numel(folders), num_sub_slc, num_time_points);
btst_recal = zeros(size(btst_fits, 1), num_time_points); 
toj_lb = zeros(1, num_time_points);
toj_ub = zeros(1, num_time_points);

for ss = 1:num_sub_slc

    i_sub = sub_slc(ss);
    i_data = load(fullfile(result_folder, files(ss).name));
    D(mm, ss) = i_data;
    log_model_evi(mm, ss) = i_data.diag.bestELCBO;
    bestP{mm, ss} = i_data.diag.post_mean;
    pred{mm, ss} = i_data.pred;

    % extract summary data for plot
    pred_recal(mm, ss, :) = mean(pred{mm, ss}.pss_shift, 2);

%     % load bootstrap data
%     btst_data = load(fullfile(result_folder, btst_files(ss).name));
% 
%     % for each btst trial
%     for jj = 1:size(btst_fits, 1)
%         btst_recal(jj, :) = mean(btst_data.pred{jj}.pss_shift, 2);
%     end
% 
%     % get confidence interval for each time point
%     for tt = 1:num_time_points
%         [toj_lb(tt), toj_ub(tt)] = get68CI(btst_recal(:, tt));
%     end

end

%% %%%%%%%%%%%%%%%%%%%%%%%% plot %%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% figure set up

cmp1 = [229, 158, 168; 203, 227, 172; 171,223,235;]./255;
cmp2 = [216, 49, 91; 175, 213, 128; 88,193,238]./255;

lw = 0.5;
fontSZ = 7;
titleSZ = 9;
dotSZ = 10;

test_soa = i_data.data(1).pre_ms_unique;
adaptor_soa = pred{1,1}.adaptor_soa;

%% A. individual behavior



