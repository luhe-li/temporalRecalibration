% This function calculates the negative log likelihood for pretest and
% posttest and add them together

function nLL = nLL_CI(mu1, sigma1, c1, lambda1,... % pretest free para
    sigma2, c2, lambda2, ... % posttest free para
    p_common, sigma_c1, sigma_c2, sigma_soa, alpha, ... % recal simul para
    model, data) % fixed para, data

%% 
% define psychometric function (PMF)
P_Afirst = @(SOA, mu, sig, c, lambda) lambda/3 + (1-lambda).*normcdf(-c, SOA - mu, sig);
P_Vfirst = @(SOA, mu, sig, c, lambda) lambda/3 + (1-lambda).*(1 - normcdf(c, SOA-mu, sig));
P_simultaneous = @(SOA, mu, sig, c, lambda) ...
    1 - (lambda/3 + (1-lambda).*normcdf(-c, SOA - mu, sig)) ...
    - (lambda/3 + (1-lambda).*(1 - normcdf(c, SOA-mu, sig)));


%% pretest nLL

pre_nLL = -data.pre_nT_A1st*log(P_Afirst(data.pre_ms_unique, mu1, sigma1, c1, lambda1))'...
        -data.pre_nT_V1st*log(P_Vfirst(data.pre_ms_unique, mu1, sigma1, c1, lambda1))'...
        -data.pre_nT_simul*log(P_simultaneous(data.pre_ms_unique, mu1, sigma1, c1, lambda1))';

%% posttest nLL


end