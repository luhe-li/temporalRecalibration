% This function takes in model-specific parameters and plugs them into
% models used in v5. Based on fitted pms,
% add noised based on nTrials, and returns the noisy simulated response.

function sim_r_org = sim_6M_v5(i_model, para, ExpInfo)

%% define model 
% define PMF
P_Afirst                                = @(SOA, mu, sig, c, lambda) lambda/3 + (1-lambda).*normcdf(-c, SOA - mu, sig);
P_Vfirst                                = @(SOA, mu, sig, c, lambda) lambda/3 + (1-lambda).*(1 - normcdf(c, SOA-mu, sig));
P_simultaneous                          = @(SOA, mu, sig, c, lambda) ...
    1 - (lambda/3 + (1-lambda).*normcdf(-c, SOA - mu, sig)) ...
    - (lambda/3 + (1-lambda).*(1 - normcdf(c, SOA-mu, sig)));

% grid = test_soa levels (1x15)
SOA_finer = ExpInfo.SOA;

M1                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(3), p(5), p(7));...
    @(p) P_simultaneous(SOA_finer, p(1), p(3), p(5), p(7));...
    @(p) P_Afirst(SOA_finer, p(1), p(3), p(5), p(7));...
    @(p) P_Vfirst(SOA_finer, p(2), p(4), p(6), p(8));...
    @(p) P_simultaneous(SOA_finer, p(2), p(4), p(6), p(8));...
    @(p) P_Afirst(SOA_finer, p(2), p(4), p(6), p(8))};

M2                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(3), p(4), p(6));...
    @(p) P_simultaneous(SOA_finer, p(1), p(3), p(4), p(6));...
    @(p) P_Afirst(SOA_finer, p(1), p(3), p(4), p(6));...
    @(p) P_Vfirst(SOA_finer, p(2), p(3), p(5), p(7));...
    @(p) P_simultaneous(SOA_finer, p(2), p(3), p(5), p(7));...
    @(p) P_Afirst(SOA_finer, p(2), p(3), p(5), p(7))};

M3                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(3), p(5), p(6));...
    @(p) P_simultaneous(SOA_finer, p(1), p(3), p(5), p(6));...
    @(p) P_Afirst(SOA_finer, p(1), p(3), p(5), p(6));...
    @(p) P_Vfirst(SOA_finer, p(2), p(4), p(5), p(7));...
    @(p) P_simultaneous(SOA_finer, p(2), p(4), p(5), p(7));...
    @(p) P_Afirst(SOA_finer, p(2), p(4), p(5), p(7))};

M4                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(3), p(4), p(5));...
    @(p) P_simultaneous(SOA_finer, p(1), p(3), p(4), p(5));...
    @(p) P_Afirst(SOA_finer, p(1), p(3), p(4), p(5));...
    @(p) P_Vfirst(SOA_finer, p(2), p(3), p(4), p(6));...
    @(p) P_simultaneous(SOA_finer, p(2), p(3), p(4), p(6));...
    @(p) P_Afirst(SOA_finer, p(2), p(3), p(4), p(6))};

M5                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(2), p(3), p(5));...
    @(p) P_simultaneous(SOA_finer, p(1), p(2), p(3), p(5));...
    @(p) P_Afirst(SOA_finer, p(1), p(2), p(3), p(5));...
    @(p) P_Vfirst(SOA_finer, p(1), p(2), p(4), p(6));...
    @(p) P_simultaneous(SOA_finer, p(1), p(2), p(4), p(6));...
    @(p) P_Afirst(SOA_finer, p(1), p(2), p(4), p(6))};

M6                                      = {@(p) P_Vfirst(SOA_finer, p(1), p(2), p(3), p(4));...
    @(p) P_simultaneous(SOA_finer, p(1), p(2), p(3), p(4));...
    @(p) P_Afirst(SOA_finer, p(1), p(2), p(3), p(4));...
    @(p) P_Vfirst(SOA_finer, p(1), p(2), p(3), p(5));...
    @(p) P_simultaneous(SOA_finer, p(1), p(2), p(3), p(5));...
    @(p) P_Afirst(SOA_finer, p(1), p(2), p(3), p(5))};

models = {M1; M2; M3; M4; M5; M6};

%% fit PMF

pmf = arrayfun(@(i) models{i_model}{i}(para), 1:6,'UniformOutput',false);
pmf_mx = cat(1,pmf{:});

%% simulated  responses

sim_r_org                = cell(1,2);
for s                    = 1:2 % loop through pre and post session
    p                        = pmf_mx(((s-1)*3+1):s*3, :); % pre and post probability of reporting V,simul, A
    sim_r_org{s}             = sampleMatrix(p, ExpInfo.nTrials);
end

end